/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

//
// ANNOTATE_SNV
//

process {
    withName: '.*ANNOTATE_SNV:ENSEMBLVEP_VEP' {
        ext.when = { params.switch_vep }
        ext.prefix = { "${vcf.simpleName}_vep" }
        ext.args   = { [
            '--dir_plugins vep_cache/Plugins',
            '--plugin LoFtool,LoFtool_scores.txt',
            '--plugin pLI,pLI_values.txt',
            '--distance 5000',
            '--buffer_size 20000',
            '--format vcf --max_sv_size 248956422',
            '--appris --biotype --cache --canonical --ccds --compress_output bgzip',
            '--domains --exclude_predicted --force_overwrite',
            '--hgvs --humdiv --no_progress --numbers',
            '--merged --polyphen p --protein --offline --regulatory --sift p --symbol --tsl',
            '--uniprot --vcf'
        ].join(' ') }
        publishDir = [
            path: { "${params.outdir}/annotate_vep" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: '.*ANNOTATE_SNV:TABIX_VEP' {
        publishDir = [
            path: { "${params.outdir}/annotate_vep" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}
